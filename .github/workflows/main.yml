name: CI/CD Pipeline

on:
  push:
    branches: [ main ]


jobs:

  continuous-integration:
    runs-on: ubuntu-latest

    steps:
      # Step 1
      - uses: actions/checkout@v2

      # Step 2
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: 3.7
          architecture: x64
      # Step 3
      - name: Install Python Virtual ENV
        run: pip3 install virtualenv
      # Step 4
      - name:  Setup Virtual env
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: set system var
        run: export TUTORIAL_REDDIT_ROLE=${{ secrets.TUTORIAL_REDDIT_ROLE }} &&
            export TUTORIAL_REDDIT_SECRET=${{ secrets.TUTORIAL_REDDIT_SECRET }}
      # Step 5
      - name: Activate and Install Depencies into Virtual env
        run: python -m venv venv && source venv/bin/activate
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Install Dependencies requirements
        run: pip3 install -r requirements.txt

      - name: Install Dependencies requirements_dev
        run: pip3 install -r requirements_dev.txt

      - name: Install Dependencies my package
        run: pip3 install -e .
      # Step 6
      - name: Activate venv and Run Test
        run: . venv/bin/activate && pytest

      # Step 7
      - name: Create Zipfile archive of Dependencies
        run: |
          cd ./venv/lib/python3.7/site-packages
          zip -r9 ../../../../api.zip .

      # Step 8
      - name: Add App to Zip file
        run: zip -g ../api.zip -r .

      # Step 9
      - name: Upload zip file artifact
        uses: actions/upload-artifact@v2
        with:
          name: api
          path: api.zip